<stack>
  <description brief="Care-O-bot stack with driver packages">

     The cob_driver stack includes packages that provide access to the Care-O-bot hardware through ROS messages, services and actions. E.g. for mobile base, arm, camera sensors, laser scanners, etc...

  </description>
  <author>Maintained by Florian Weisshardt</author>
  <license>BSD,LGPL</license>  
  <review status="unreviewed" notes=""/>
  <url>http://ros.org/wiki/cob_driver</url>
  <depend stack="arm_navigation" /> <!-- kinematics_base, kinematics_msgs, arm_navigation_msgs -->
  <depend stack="audio_common" /> <!-- sound_play -->
  <depend stack="camera_drivers" /> <!-- prosilica_camera -->
  <depend stack="cob_common" /> <!-- cob_utilities, cob_srvs, cob_description, cob_vision_utils, brics_actuator -->
  <depend stack="cob_extern" /> <!-- libmesasr, libm5api, brics_oodl_scanner_libs, libphidgets, libpcan, libntcan -->
  <depend stack="common" /> <!-- actionlib, tinyxml -->
  <depend stack="common_msgs" /> <!-- nav_msgs, actionlib_msgs, trajectory_msgs, sensor_msgs, geometry_msgs, visualization_msgs, diagnostic_msgs -->
  <depend stack="control" /> <!-- control_msgs -->
  <depend stack="diagnostics" /> <!-- diagnostic_updater -->
  <depend stack="eigen" /> <!-- eigen -->
  <depend stack="geometry" /> <!-- tf, tf_conversions -->
  <depend stack="image_common" /> <!-- polled_camera, image_transport -->
  <depend stack="image_pipeline" /> <!-- image_proc -->
  <depend stack="joystick_drivers" /> <!-- joy -->
  <depend stack="laser_drivers" /> <!-- hokuyo_node -->
  <depend stack="laser_pipeline" /> <!-- laser_geometry -->
  <depend stack="nodelet_core" /> <!-- nodelet -->
  <depend stack="openni_kinect" /> <!-- openni_launch, openni_camera -->
  <depend stack="orocos_kinematics_dynamics" /> <!-- kdl -->
  <depend stack="perception_pcl" /> <!-- pcl, pcl_ros -->
  <depend stack="pluginlib" /> <!-- pluginlib -->
  <depend stack="point_cloud_perception" /> <!-- point_cloud_converter -->
  <depend stack="pr2_common" /> <!-- pr2_msgs -->
  <depend stack="pr2_controllers" /> <!-- pr2_controllers_msgs -->
  <depend stack="pr2_kinematics" /> <!-- pr2_arm_kinematics -->
  <depend stack="robot_model" /> <!-- robot_state_publisher, urdf, kdl_parser, collada_urdf -->
  <depend stack="ros" /> <!-- roslib -->
  <depend stack="ros_comm" /> <!-- std_msgs, rostest, rospy, roscpp, message_filters -->
  <depend stack="vision_opencv" /> <!-- opencv2, cv_bridge -->

</stack>
