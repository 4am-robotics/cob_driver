<?xml version="1.0"?>
<launch>

	<!-- send parameters to parameter server -->
	<rosparam command="load" ns="arm_controller" file="$(find cob_arm)/ros/launch/$(env ROBOT).yaml"/>

	<!-- start powercube_chain -->
	<node pkg="cob_powercube_chain" type="cob_powercube_chain_sim" name="arm_node" ns="arm_controller" cwd="node" respawn="false" output="screen"/>
	
	<!-- start ik_solver for arm -->
	<node pkg="cob_manipulator" type="cob_ik_solver_kdl" name="cob_ik_solver" ns="arm_controller" cwd="node" respawn="false" output="screen"/>

	<!-- start constraint aware ik_solver for arm -->
	<include file="$(find cob_manipulator)/ros/launch/cob_arm_kinematics_constraint_aware.launch" />

	<!-- start constraint aware cartesian interface -->
	<rosparam command="load" ns="arm_controller" file="$(find cob_arm)/ros/launch/$(env ROBOT).yaml"/>
	<node pkg="cob_manipulator" type="move_cart_constraint_aware.py" name="move_cart" ns="arm_controller" cwd="node" respawn="false" output="screen"/>

	<!-- start cartesian interface -->
	<!-- <node pkg="cob_manipulator" type="move_cart.py" name="move_cart" ns="arm_controller" cwd="node" respawn="false" output="screen"/> -->

	<!-- start the grasp service -->
	<include file="$(find brsu_grasp)/launch/brsu_grasp.launch"/>

	<!-- provides get_fk, get_ik_solver_info WITH limits -->
	<!-- remember to have safety controller in cob_description/../lbr.urdf.xacro -->
	<!-- <include file="$(find cob_manipulator)/ros/launch/cob3_arm_kinematics.launch" /> -->
	<!--include file="$(find cob_arm_navigation)/launch/cob3_arm_navigation.launch" /-->

	<!-- rostest integration -->
	<include file="$(find cob_arm)/ros/launch/arm.test" />

</launch>
