//ROS typedefs
#include "ros/ros.h"
#include <cob_msgs/PowerBoardState.h>
#include <cob_msgs/PowerState.h>
#include <cob_msgs/EmergencyStopState.h>
#include <std_msgs/Float64.h>

//#include <libphidgets/phidget21.h>


class cob_voltage_control_config
{
public:
    double min_voltage;
    double max_voltage;
    double max_voltage_res;
    int max_counts;
};

class cob_voltage_control_data
{
// autogenerated: don't touch this class
public:
    //configuration data

    //input data
    int in_phidget_voltage;

    //output data
    cob_msgs::PowerBoardState out_pub_power_board_state;
    cob_msgs::PowerState out_pub_powerstate_;
    cob_msgs::EmergencyStopState out_pub_em_stop_state_;
    std_msgs::Float64 out_pub_voltage;    
};

//document how this class has to look
//never change after first generation
class cob_voltage_control_impl
{

public:

    cob_voltage_control_impl()
    {
        //user specific code
    }
    void configure() 
    {
    }
    void update(cob_voltage_control_data &data, cob_voltage_control_config config)
    {
	
	data.out_pub_power_board_state.header.stamp = ros::Time::now();
	data.out_pub_power_board_state.run_stop = data.out_pub_em_stop_state_.emergency_state;
	data.out_pub_power_board_state.wireless_stop = false;
    }
    
    void exit()
    {
    }

};
